/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        shutDownTerminalProcess: shutDownTerminalProcess {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp C>,
                <&macro_release>;

            label = "SHUTDOWNTERMINALPROCESS";
        };

        ControlC: ControlC {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C)>;
            label = "CONTROLC";
        };

        AltTab: AltTab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(TAB)>;
            label = "ALTTAB";
        };

        Wrap_console_log: Wrap_console_log {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kt LEFT_CONTROL &kt LEFT_ALT &kt W &kp W>,
                <&macro_release>;

            label = "WRAP_CONSOLE_LOG";
        };

        Wrap_console_down: Wrap_console_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kt LEFT_CONTROL &kt LEFT_ALT &kt W &kp DOWN>,
                <&macro_release>;

            label = "WRAP_CONSOLE_DOWN";
        };

        Wrap_console_up: Wrap_console_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL &kp LEFT_ALT &kp W &kp UP>,
                <&macro_release>;

            label = "WRAP_CONSOLE_UP";
        };
    };

    combos {
        compatible = "zmk,combos";

        Alt+Tab {
            bindings = <&kp LEFT_ALT>;
            key-positions = <41>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp TAB  &mt LEFT_CONTROL ESCAPE  &kp Q  &kp W  &kp E                    &kp R        &kp T      &kp Y      &kp U                 &kp I              &kp O    &kp P     &kp LBKT  &kp RIGHT_BRACKET
         &kp LEFT_SHIFT           &kp A  &kp S  &kp D                    &kp F        &kp G      &kp H      &kp J                 &kp K              &kp L    &kp SEMI  &kp SQT
         &kp LEFT_COMMAND         &kp Z  &kp X  &kp C                    &kp V        &kp B      &kp N      &kp M                 &kp COMMA          &kp DOT  &kp FSLH  &kp BSLH
                                                &mt BACKSPACE BACKSPACE  &lt 1 SPACE  &lt 2 RET  &lt 1 TAB  &mt LEFT_SHIFT SPACE  &mt DELETE DELETE
            >;
        };

        arrow_code_num {
            bindings = <
&kp PIPE  &kp F12           &kp UNDERSCORE  &kp HOME        &kp UP_ARROW    &kp END          &kp MINUS  &kp SPACE  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &none    &kp CAPS  &trans
          &kp LEFT_CONTROL  &kp PLUS        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp EQUAL  &none      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &none    &none
          &none             &kp GRAVE       &kp PAGE_UP     &kp UNDERSCORE  &kp PAGE_DOWN    &kp PIPE   &none      &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp DOT  &trans
                                                            &trans          &trans           &lt 3 RET  &lt 1 ESC  &kp KP_NUMBER_0  &kp COMMA
            >;
        };

        func_symb_media {
            bindings = <
&kp LG(TAB)  &none  &kp F1     &kp F2      &kp F3            &kp F4      &kp F5     &kp F6     &kp F7         &kp F8         &kp F9         &kp F10   &kp F11          &mt RGUI F12
             &none  &kp EXCL   &kp AT      &kp HASH          &kp DLLR    &kp PRCNT  &kp CARET  &kp AMPS       &kp STAR       &kp LPAR       &kp RPAR  &mt RCTRL MINUS
             &none  &kp GRAVE  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &none      &none      &kp LG(LA(J))  &kp LG(LA(L))  &kp LG(LA(O))  &none     &trans
                                           &lt 3 TAB         &trans      &lt 3 A    &trans     &trans         &lt 1 DEL
            >;
        };

        misc {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &none  &none  &none   &none  &none   &none         &none         &none         &none         &none         &bootloader  &sys_reset
            &bt BT_SEL 1  &none  &none  &none   &none  &none   &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
            &bt BT_SEL 2  &none  &none  &none   &none  &none   &none         &none         &none         &none         &none         &none
                                        &trans  &none  &trans  &trans        &none         &trans
            >;
        };
    };
};
